import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
import * as i3 from "ngx-pagination";
/**
 * Componente de Tabela Customizável
 *
 * O `TableComponent` é um componente Angular projetado para exibir uma tabela customizável
 * com suporte a paginação. Ele permite a configuração de cabeçalhos de colunas, posicionamento
 * da paginação e opções de itens por página. O componente é flexível, utilizando classes Bootstrap
 * para ajustar o layout das colunas e emitindo eventos para que o componente pai possa reagir a
 * mudanças na página ou no número de itens exibidos.
 *
 * @selector lib-table
 * @templateUrl ./table.component.html
 * @styleUrl ./table.component.scss
*/
export class TableComponent {
    // #endregion PUBLIC
    // #endregion ==========> PROPRIEDADES <==========
    // #region ==========> INICIALIZAÇÃO <==========
    constructor() {
        // #region ==========> PROPRIEDADES <==========
        // #region PRIVATE
        // [...]
        // #endregion PRIVATE
        // #region PUBLIC
        /** Determina se a tabela deve usar paginação.
         * @default true */
        this.usePagination = true;
        /** Posicionamento dos controles de paginação.
         * @default 'end' */
        this.paginationPlacement = 'end';
        /** Evento emitido quando o número de itens por página é alterado. */
        this.itemsPerPageChange = new EventEmitter();
        /** Evento emitido quando a página é alterada. */
        this.pageChange = new EventEmitter();
        /** Contador de registros (pode ser usado para futuras implementações de lógica interna). */
        this.counter = 0;
        /** Página atual da tabela. */
        this.page = 1;
    }
    /** Inicializa o componente e define o número inicial de itens por página. */
    ngOnInit() {
        if (this.recordsList) {
            this.itemsPerPage = this.countOptions ? this.countOptions[0] : this.recordsList.length;
        }
        else {
            this.itemsPerPage = this.countOptions[0] ?? 10;
        }
    }
    /** Monitora as mudanças nas entradas do componente e realiza ajustes, como resetar a paginação ou validar o layout das colunas.
     * @param changes Objeto que contém as mudanças nas entradas do componente. */
    ngOnChanges(changes) {
        if (changes['recordsList'].currentValue) {
            this.resetPagination(this.recordsList ?? []);
            let maxColumns = this.headersList.reduce((n, { col }) => n + col, 0);
            if (maxColumns >= 13) {
                throw new Error("A soma de largura (classe com prefixo 'col-') de todas as colunas não pode ser maior que 12.");
            }
        }
    }
    // #endregion ==========> INICIALIZAÇÃO <==========
    // #region ==========> UTILITÁRIOS <==========
    /** Modifica a quantidade de itens a ser mostrada na lista.
     * @param event parâmetro de evento que irá selecionar a nova quantidade. */
    onSelectChange(event) {
        this.itemsPerPage = parseInt(event.target.value, 10);
        this.page = 1;
        this.itemsPerPageChange.emit(this.itemsPerPage);
    }
    /** Reseta a paginação da listagem com base no número atual de registros.
     * @param list Lista de registros para resetar a paginação. */
    resetPagination(list) {
        const startIndex = (this.page - 1) * this.itemsPerPage;
        if (list.length <= startIndex) {
            this.page = 1;
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: TableComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.3.12", type: TableComponent, selector: "lib-table", inputs: { usePagination: "usePagination", recordsList: ["list", "recordsList"], countOptions: ["counts", "countOptions"], paginationPlacement: ["placement", "paginationPlacement"], headersList: ["headers", "headersList"], emptyListMessage: "emptyListMessage" }, outputs: { itemsPerPageChange: "itemsPerPageChange", pageChange: "pageChange" }, usesOnChanges: true, ngImport: i0, template: "@if (recordsList) {\n   <div class=\"table-list w-100 position-relative\">\n      <!-- Exibe o n\u00FAmero de itens mostrados e o total de registros -->\n      <span class=\"ms-1\"> Exibindo {{ itemsPerPage <= recordsList.length ? itemsPerPage : recordsList.length }} de {{ recordsList.length }} registros </span>\n      \n      <!-- Container da tabela -->\n      <div class=\"table-list overflow-hidden border-bottom-0 rounded-bottom rounded\">\n         <table class=\"table table-hover border mb-0\">\n            <thead>\n               <tr>\n                  <!-- Itera sobre a lista de cabe\u00E7alhos para criar as colunas -->\n                  <th *ngFor=\"let header of headersList\" scope=\"col\"\n                     class=\"align-middle text-dark-grey {{ header.col > 0 ? 'col-'+header.col : 'col' }} {{ header.customClasses }}\">\n                     {{ header.name }}\n                  </th>\n               </tr>\n            </thead>\n\n            <tbody class=\"bg-light fade-in-row\">\n               @if (recordsList.length > 0) {\n                  <!-- Conte\u00FAdo das linhas da tabela -->\n                  <ng-content select=\"[innerRows]\"></ng-content>\n               }\n               @else {\n                  <!-- Mensagem de aus\u00EAncia de registros -->\n                  <tr>\n                     <td colspan=\"12\" class=\"align-middle\">\n                        <span class=\"fw-light fst-italic text-center\"> {{ emptyListMessage ? emptyListMessage : \"Consulta n\u00E3o retornou registros...\" }} </span>\n                     </td>\n                  </tr>\n               }\n            </tbody>\n         </table>\n\n         <!-- #region PAGINA\u00C7\u00C3O -->\n         <div *ngIf=\"usePagination && recordsList.length > 0\" class=\"d-flex mt-2\"\n            [ngClass]=\"{\n               'justify-content-start': paginationPlacement == 'start',\n               'justify-content-center': paginationPlacement == 'center',\n               'justify-content-end': paginationPlacement == 'end',\n               'justify-content-between': paginationPlacement == 'between'\n            }\">\n            <div class=\"d-flex align-items-center\">\n               <label class=\"me-2\" style=\"white-space: nowrap;\"> Itens por p\u00E1gina </label>\n               <select class=\"form-select select-search\" (change)=\"onSelectChange($event)\">\n                  <option *ngFor=\"let count of countOptions; let i = index\" [value]=\"count\"\n                     [selected]=\"countOptions.length > 0 && i == 0\">{{ count }}</option>\n               </select>\n            </div>\n\n            <!-- Controle de pagina\u00E7\u00E3o -->\n            <pagination-controls class=\"sp-pagination mt-3\"\n               (pageChange)=\"page = $event; pageChange.emit($event)\"\n               previousLabel=\"\u00AB&nbsp;&nbsp;&nbsp;\" nextLabel=\"&nbsp;&nbsp;&nbsp;\u00BB\"\n               [maxSize]=\"5\">\n            </pagination-controls>\n         </div>\n         <!-- #endregion PAGINA\u00C7\u00C3O -->\n      </div>\n   </div>\n} @else {\n   <!-- Loader enquanto os registros s\u00E3o carregados -->\n   <div class=\"w-100 text-center\">\n      <div class=\"spinner-border\" role=\"status\"> <span class=\"visually-hidden\">Carregando informa\u00E7\u00F5es...</span> </div>\n   </div>\n}\n", styles: [".sp-pagination ::ng-deep .ngx-pagination .current{background:#3767b2;border-radius:.375rem}.sp-pagination ::ng-deep .ngx-pagination a:hover,.sp-pagination ::ng-deep .ngx-pagination button:hover{border-radius:.375rem}.sp-pagination ::ng-deep .ngx-pagination .pagination-previous a:before,.sp-pagination ::ng-deep .ngx-pagination .pagination-previous.disabled:before{content:\"\";display:inline-block;margin-right:.5rem}.sp-pagination ::ng-deep .ngx-pagination .pagination-next a:after,.sp-pagination ::ng-deep .ngx-pagination .pagination-next.disabled:after{content:\"\";display:inline-block;margin-left:.5rem}.text-dark-grey{color:#63676b!important}table{border-color:#c4c4c4}table thead{height:50px;font-size:1rem;background-color:#f9fafb!important}table thead>tr{background-color:#f9fafb!important}table thead>tr>th{background-color:#f9fafb!important}table tbody{font-size:.875rem}table tbody>tr{height:50px}table tbody>tr:hover{background-color:#cce5ff}table.table>tbody{border-top:none}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i2.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "component", type: i3.PaginationControlsComponent, selector: "pagination-controls", inputs: ["id", "maxSize", "directionLinks", "autoHide", "responsive", "previousLabel", "nextLabel", "screenReaderPaginationLabel", "screenReaderPageLabel", "screenReaderCurrentLabel"], outputs: ["pageChange", "pageBoundsCorrection"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: TableComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lib-table', template: "@if (recordsList) {\n   <div class=\"table-list w-100 position-relative\">\n      <!-- Exibe o n\u00FAmero de itens mostrados e o total de registros -->\n      <span class=\"ms-1\"> Exibindo {{ itemsPerPage <= recordsList.length ? itemsPerPage : recordsList.length }} de {{ recordsList.length }} registros </span>\n      \n      <!-- Container da tabela -->\n      <div class=\"table-list overflow-hidden border-bottom-0 rounded-bottom rounded\">\n         <table class=\"table table-hover border mb-0\">\n            <thead>\n               <tr>\n                  <!-- Itera sobre a lista de cabe\u00E7alhos para criar as colunas -->\n                  <th *ngFor=\"let header of headersList\" scope=\"col\"\n                     class=\"align-middle text-dark-grey {{ header.col > 0 ? 'col-'+header.col : 'col' }} {{ header.customClasses }}\">\n                     {{ header.name }}\n                  </th>\n               </tr>\n            </thead>\n\n            <tbody class=\"bg-light fade-in-row\">\n               @if (recordsList.length > 0) {\n                  <!-- Conte\u00FAdo das linhas da tabela -->\n                  <ng-content select=\"[innerRows]\"></ng-content>\n               }\n               @else {\n                  <!-- Mensagem de aus\u00EAncia de registros -->\n                  <tr>\n                     <td colspan=\"12\" class=\"align-middle\">\n                        <span class=\"fw-light fst-italic text-center\"> {{ emptyListMessage ? emptyListMessage : \"Consulta n\u00E3o retornou registros...\" }} </span>\n                     </td>\n                  </tr>\n               }\n            </tbody>\n         </table>\n\n         <!-- #region PAGINA\u00C7\u00C3O -->\n         <div *ngIf=\"usePagination && recordsList.length > 0\" class=\"d-flex mt-2\"\n            [ngClass]=\"{\n               'justify-content-start': paginationPlacement == 'start',\n               'justify-content-center': paginationPlacement == 'center',\n               'justify-content-end': paginationPlacement == 'end',\n               'justify-content-between': paginationPlacement == 'between'\n            }\">\n            <div class=\"d-flex align-items-center\">\n               <label class=\"me-2\" style=\"white-space: nowrap;\"> Itens por p\u00E1gina </label>\n               <select class=\"form-select select-search\" (change)=\"onSelectChange($event)\">\n                  <option *ngFor=\"let count of countOptions; let i = index\" [value]=\"count\"\n                     [selected]=\"countOptions.length > 0 && i == 0\">{{ count }}</option>\n               </select>\n            </div>\n\n            <!-- Controle de pagina\u00E7\u00E3o -->\n            <pagination-controls class=\"sp-pagination mt-3\"\n               (pageChange)=\"page = $event; pageChange.emit($event)\"\n               previousLabel=\"\u00AB&nbsp;&nbsp;&nbsp;\" nextLabel=\"&nbsp;&nbsp;&nbsp;\u00BB\"\n               [maxSize]=\"5\">\n            </pagination-controls>\n         </div>\n         <!-- #endregion PAGINA\u00C7\u00C3O -->\n      </div>\n   </div>\n} @else {\n   <!-- Loader enquanto os registros s\u00E3o carregados -->\n   <div class=\"w-100 text-center\">\n      <div class=\"spinner-border\" role=\"status\"> <span class=\"visually-hidden\">Carregando informa\u00E7\u00F5es...</span> </div>\n   </div>\n}\n", styles: [".sp-pagination ::ng-deep .ngx-pagination .current{background:#3767b2;border-radius:.375rem}.sp-pagination ::ng-deep .ngx-pagination a:hover,.sp-pagination ::ng-deep .ngx-pagination button:hover{border-radius:.375rem}.sp-pagination ::ng-deep .ngx-pagination .pagination-previous a:before,.sp-pagination ::ng-deep .ngx-pagination .pagination-previous.disabled:before{content:\"\";display:inline-block;margin-right:.5rem}.sp-pagination ::ng-deep .ngx-pagination .pagination-next a:after,.sp-pagination ::ng-deep .ngx-pagination .pagination-next.disabled:after{content:\"\";display:inline-block;margin-left:.5rem}.text-dark-grey{color:#63676b!important}table{border-color:#c4c4c4}table thead{height:50px;font-size:1rem;background-color:#f9fafb!important}table thead>tr{background-color:#f9fafb!important}table thead>tr>th{background-color:#f9fafb!important}table tbody{font-size:.875rem}table tbody>tr{height:50px}table tbody>tr:hover{background-color:#cce5ff}table.table>tbody{border-top:none}\n"] }]
        }], ctorParameters: () => [], propDecorators: { usePagination: [{
                type: Input
            }], recordsList: [{
                type: Input,
                args: [{ alias: 'list', required: true }]
            }], countOptions: [{
                type: Input,
                args: ['counts']
            }], paginationPlacement: [{
                type: Input,
                args: ['placement']
            }], headersList: [{
                type: Input,
                args: [{ alias: 'headers', required: true }]
            }], emptyListMessage: [{
                type: Input,
                args: ['emptyListMessage']
            }], itemsPerPageChange: [{
                type: Output
            }], pageChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,